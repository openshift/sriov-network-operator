name: Test SR-IOV Operator

on: [push, pull_request]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:

  build:
    name: build
    runs-on: ubuntu-24.04
    steps:

    - name: Set up Go 1.23
      uses: actions/setup-go@v6
      with:
        go-version: 1.23.x

    - name: Check out code into the Go module directory
      uses: actions/checkout@v5

    - name: fmt
      run: IS_CONTAINER=yes make fmt

    - name: Build
      run: make all

  test:
    name: test
    runs-on: ubuntu-24.04
    steps:

    - name: Set up Go 1.23
      uses: actions/setup-go@v6
      with:
        go-version: 1.23.x

    - name: Check out code into the Go module directory
      uses: actions/checkout@v5

    - name: test pkg on kubernetes
      run: CLUSTER_TYPE=kubernetes make test-pkg

    - name: test pkg on openshift
      run: CLUSTER_TYPE=openshift make test-pkg

    - name: test cmd on kubernetes
      run: CLUSTER_TYPE=kubernetes make test-cmd

    - name: test cmd on openshift
      run: CLUSTER_TYPE=openshift make test-cmd

    - name: test cmd on kubernetes
      run: CLUSTER_TYPE=kubernetes make test-api

    - name: test api on openshift
      run: CLUSTER_TYPE=openshift make test-api

    - name: test controllers on openshift
      run: CLUSTER_TYPE=openshift make test-controllers

    - name: test controllers on kubernetes
      run: CLUSTER_TYPE=kubernetes make test-controllers

    - name: test bindata/scripts
      run: make test-bindata-scripts

  modules:
    name: check go modules
    runs-on: ubuntu-24.04
    steps:

    - name: Set up Go 1.23
      uses: actions/setup-go@v6
      with:
        go-version: 1.23.x

    - name: Check out code into the Go module directory
      uses: actions/checkout@v5

    - name: check go modules are up to date
      run: make check-deps

  manifests:
    name: check manifests
    runs-on: ubuntu-24.04
    steps:
    - name: Check out code
      uses: actions/checkout@v5

    - name: check if the config/ folder is up to date
      run: make check-manifests

  golangci:
    name: Golangci-lint
    runs-on: ubuntu-24.04
    steps:
    - name: Set up Go 1.23
      uses: actions/setup-go@v6
      with:
        go-version: 1.23.x
    - name: Check out code into the Go module directory
      uses: actions/checkout@v5
    - name: run lint checks
      run: make lint

  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          severity: error

  test-coverage:
    name: test-coverage
    runs-on: ubuntu-24.04
    steps:

    - name: Set up Go 1.23
      uses: actions/setup-go@v6
      with:
        go-version: 1.23.x

    - name: Check out code into the Go module directory
      uses: actions/checkout@v5

    - name: test pkg on kubernetes
      run: CLUSTER_TYPE=kubernetes make test-pkg

    - name: test pkg on openshift
      run: CLUSTER_TYPE=openshift make test-pkg

    - name: test cmd on kubernetes
      run: CLUSTER_TYPE=kubernetes make test-cmd

    - name: test cmd on openshift
      run: CLUSTER_TYPE=openshift make test-cmd

    - name: test cmd on kubernetes
      run: CLUSTER_TYPE=kubernetes make test-api

    - name: test api on openshift
      run: CLUSTER_TYPE=openshift make test-api

    - name: test controllers on openshift
      run: CLUSTER_TYPE=openshift make test-controllers

    - name: test controllers on kubernetes
      run: CLUSTER_TYPE=kubernetes make test-controllers

    - name: merge test coverage
      run: make merge-test-coverage

    - name: Coveralls
      uses: coverallsapp/github-action@v2.3.6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: lcov.out

  virtual-k8s-cluster:
    name: k8s
    needs: [
      build,
      test,
      golangci,
    ]
    runs-on: [ sriov ]
    env:
      TEST_REPORT_PATH: k8s-artifacts
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v5

      - name: Set up Go 1.23
        uses: actions/setup-go@v6
        with:
          go-version: 1.23.x

      - name: run test
        run: make test-e2e-conformance-virtual-k8s-cluster-ci

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ env.TEST_REPORT_PATH }}
          path: ./${{ env.TEST_REPORT_PATH }}

      - name: remove virtual cluster
        if: always()
        run: |
          kcli delete cluster $CLUSTER_NAME -y
          kcli delete network $CLUSTER_NAME -y

  virtual-ocp:
    name: ocp
    needs: [
      build,
      test,
      golangci,
    ]
    runs-on: [ ocp ]
    env:
      TEST_REPORT_PATH: ocp-artifacts
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v5

      - name: Set up Go 1.23
        uses: actions/setup-go@v6
        with:
          go-version: 1.23.x

      - name: run test
        run: make test-e2e-conformance-virtual-ocp-cluster-ci

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ env.TEST_REPORT_PATH }}
          path: ./${{ env.TEST_REPORT_PATH }}

      - name: remove virtual cluster
        if: always()
        run: |
          kcli delete cluster $CLUSTER_NAME -y
          kcli delete network $CLUSTER_NAME -y
